From 1b0a7577f1e1b81e626705af7a658e643ee29377 Mon Sep 17 00:00:00 2001
From: Francisco <femolina@uc.cl>
Date: Wed, 23 Nov 2016 14:39:55 -0300
Subject: [PATCH] added timer intitialization

---
 src/mac/LoRaMac.c | 30 ++++++++++++++++++------------
 1 file changed, 18 insertions(+), 12 deletions(-)

diff --git a/src/mac/LoRaMac.c b/src/mac/LoRaMac.c
index 84c1206..1662344 100644
--- a/src/mac/LoRaMac.c
+++ b/src/mac/LoRaMac.c
@@ -478,13 +478,16 @@ static RadioEvents_t RadioEvents;
 /*!
  * LoRaMac duty cycle delayed Tx timer
  */
-static TimerEvent_t TxDelayedTimer;
+static xtimer_t xtimerTxDelayedTimer;
+static TimerEvent_t TxDelayedTimer= {0, 0, &xtimerTxDelayedTimer};
 
 /*!
  * LoRaMac reception windows timers
  */
-static TimerEvent_t RxWindowTimer1;
-static TimerEvent_t RxWindowTimer2;
+static xtimer_t xtimerRxWindow1;
+static xtimer_t xtimerRxWindow2;
+static TimerEvent_t RxWindowTimer1 = {0, 0, &xtimerRxWindow1};
+static TimerEvent_t RxWindowTimer2 = {0, 0, &xtimerRxWindow2};
 
 /*!
  * LoRaMac reception windows delay
@@ -497,7 +500,8 @@ static uint32_t RxWindow2Delay;
 /*!
  * Acknowledge timeout timer. Used for packet retransmissions.
  */
-static TimerEvent_t AckTimeoutTimer;
+static xtimer_t xtimerAckTimeoutTimer;
+static TimerEvent_t AckTimeoutTimer = {0, 0, &xtimerAckTimeoutTimer};
 
 /*!
  * Number of trials to get a frame acknowledged
@@ -872,7 +876,7 @@ static void OnRadioTxDone( void )
     // Update Aggregated last tx done time
     AggregatedLastTxDoneTime = curTime;
 
-    if( IsRxWindowsEnabled == true )
+    if( IsRxWindowsEnabled == true)
     {
         TimerSetValue( &RxWindowTimer1, RxWindow1Delay );
         TimerStart( &RxWindowTimer1 );
@@ -2636,6 +2640,7 @@ LoRaMacStatus_t Send( LoRaMacHeader_t *macHdr, uint8_t fPort, void *fBuffer, uin
     fCtrl.Bits.AdrAckReq     = false;
     fCtrl.Bits.Adr           = AdrCtrlOn;
 
+
     // Prepare the frame
     status = PrepareFrame( macHdr, &fCtrl, fPort, fBuffer, fBufferSize );
 
@@ -3001,6 +3006,7 @@ LoRaMacStatus_t PrepareFrame( LoRaMacHeader_t *macHdr, LoRaMacFrameCtrl_t *fCtrl
                 }
                 memcpy1( LoRaMacBuffer + pktHeaderLen, LoRaMacPayload, payloadSize );
             }
+
             LoRaMacBufferPktLen = pktHeaderLen + payloadSize;
 
             LoRaMacComputeMic( LoRaMacBuffer, LoRaMacBufferPktLen, LoRaMacNwkSKey, LoRaMacDevAddr, UP_LINK, UpLinkCounter, &mic );
@@ -3041,38 +3047,39 @@ LoRaMacStatus_t SendFrameOnChannel( ChannelParams_t channel )
     McpsConfirm.Datarate = LoRaMacParams.ChannelsDatarate;
     McpsConfirm.TxPower = txPowerIndex;
 
-    Radio.SetChannel( channel.Frequency );
+    //Radio.SetChannel( channel.Frequency );
+    Radio.SetChannel( 915000000 );
 
 #if defined( USE_BAND_433 ) || defined( USE_BAND_780 ) || defined( USE_BAND_868 )
     if( LoRaMacParams.ChannelsDatarate == DR_7 )
     { // High Speed FSK channel
         Radio.SetMaxPayloadLength( MODEM_FSK, LoRaMacBufferPktLen );
-        Radio.SetTxConfig( MODEM_FSK, txPower, 25e3, 0, datarate * 1e3, 0, 5, false, true, 0, 0, false, 3e3 );
+        Radio.SetTxConfig( MODEM_FSK, txPower, 25e3, 7, datarate * 1e3, 1, 5, false, true, 0, 0, false, 3e6 );
         TxTimeOnAir = Radio.TimeOnAir( MODEM_FSK, LoRaMacBufferPktLen );
 
     }
     else if( LoRaMacParams.ChannelsDatarate == DR_6 )
     { // High speed LoRa channel
         Radio.SetMaxPayloadLength( MODEM_LORA, LoRaMacBufferPktLen );
-        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 1, datarate, 1, 8, false, true, 0, 0, false, 3e3 );
+        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 8, datarate, 1, 8, false, true, 0, 0, false, 3e6 );
         TxTimeOnAir = Radio.TimeOnAir( MODEM_LORA, LoRaMacBufferPktLen );
     }
     else
     { // Normal LoRa channel
         Radio.SetMaxPayloadLength( MODEM_LORA, LoRaMacBufferPktLen );
-        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 0, datarate, 1, 8, false, true, 0, 0, false, 3e3 );
+        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 7, datarate, 1, 8, false, true, 0, 0, false, 3e6 );
         TxTimeOnAir = Radio.TimeOnAir( MODEM_LORA, LoRaMacBufferPktLen );
     }
 #elif defined( USE_BAND_915 ) || defined( USE_BAND_915_HYBRID )
     Radio.SetMaxPayloadLength( MODEM_LORA, LoRaMacBufferPktLen );
     if( LoRaMacParams.ChannelsDatarate >= DR_4 )
     { // High speed LoRa channel BW500 kHz
-        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 2, datarate, 1, 8, false, true, 0, 0, false, 3e3 );
+        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 9, datarate, 1, 8, false, true, 0, 0, false, 3e6 );
         TxTimeOnAir = Radio.TimeOnAir( MODEM_LORA, LoRaMacBufferPktLen );
     }
     else
     { // Normal LoRa channel
-        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 0, datarate, 1, 8, false, true, 0, 0, false, 3e3 );
+        Radio.SetTxConfig( MODEM_LORA, txPower, 0, 7, SX1276_SF12, 1, 8, false, true, 0, 0, false, 5e6 );
         TxTimeOnAir = Radio.TimeOnAir( MODEM_LORA, LoRaMacBufferPktLen );
     }
 #else
@@ -3087,7 +3094,6 @@ LoRaMacStatus_t SendFrameOnChannel( ChannelParams_t channel )
     TimerSetValue( &MacStateCheckTimer, MAC_STATE_CHECK_TIMEOUT );
     TimerStart( &MacStateCheckTimer );
 
-    // Send now
     Radio.Send( LoRaMacBuffer, LoRaMacBufferPktLen );
 
     LoRaMacState |= MAC_TX_RUNNING;
-- 
2.7.4

